import{$ as e,S as d,R as o,aw as t}from"./chunks/framework.CL7hJqEm.js";const c="/mySite/assets/image-8.CDuykZeJ.png",a="/mySite/assets/image-9.fasd_JUj.png",r="/mySite/assets/image-10.CXIT3zmR.png",x=JSON.parse('{"title":"网格、点、线及对应材质总结","titleTemplate":"前端笔记/three","description":"","frontmatter":{"title":"网格、点、线及对应材质总结","titleTemplate":"前端笔记/three"},"headers":[],"relativePath":"pages/front-end/three/12/index.md","filePath":"pages/front-end/three/12/index.md","lastUpdated":null}'),i={name:"pages/front-end/three/12/index.md"},n=t('<h2 id="_1-汇总" tabindex="-1">1. 汇总 <a class="header-anchor" href="#_1-汇总" aria-label="Permalink to &quot;1. 汇总&quot;">​</a></h2><table><tr align="center"><td>子类</td><td>子类中的属性、方法</td><td>父类</td><td>父类中的共有属性方法</td></tr><tr align="center"><td><p><code>Mesh</code></p></td><td><p><code>isMesh</code>、<code>type</code>、<code>geometry</code>、<code>material</code><br><code>copy(source,recursive)</code>、<code>updateMorphTargets()</code>、<code>getVertexPosition(index,target)</code>、<code>raycast(raycaster,intersects)</code></p></td><td rowspan="3"><p><code>Object3D</code></p></td><td rowspan="3"><p><code>isObject3D</code>、<code>uuid</code>、<code>type</code>、<code>parent</code>、<code>children</code>、<code>up</code>、<code>position</code><br><code>rotation</code>、<code>quaternion</code>、<code>scale</code>、<code>matrix</code>、<code>matrixWorld</code>、<code>matrixAutoUpdate</code><br><code>matrixWorldAutoUpdate</code>、<code>matrixWorldNeedsUpdate</code>、<code>layers</code>、<code>visible</code>等<br><code>onBeforeRender()</code>、<code>onAfterRender()</code>、<code>rotateOnAxis(axis, angle)</code><br><code>rotateOnWorldAxis(axis, angle)</code>、<code>rotateX(angle)</code>、<code>rotateY(angle)</code>、<code>rotateZ(angle)</code><br><code>translateOnAxis(axis,distance)</code>、<code>translateX(distance)</code>、<code>translateY(distance)</code>、<code>translateZ(distance)</code><br><code>lookAt(x,y,z)</code>、<code>add(object)</code>、<code>remove(object)</code>、<code>removeFromParent()</code>、<code>clear()</code><br><code>getObjectById(id)</code>、<code>getObjectByName(name)</code>、<code>getObjectByProperty(name,value)</code>、<code>getObjectsByProperty(name,value,result=[])</code><br><code>getWorldPosition(target)</code>、<code>getWorldScale(target)</code>、<code>getWorldDirection(target)</code>、<code>traverse(callback)</code><br><code>updateMatrix()</code>、<code>updateMatrixWorld(force)</code>、<code>updateWorldMatrix(updateParents,updateChildren)</code><br><code>toJSON(meta)</code>、<code>clone(recursive)</code>、<code>copy(source,recursive=true)</code></p></td></tr><tr align="center"><td><p><code>Points</code></p></td><td><p><code>isPoints</code>、<code>type</code>、<code>geometry</code>、<code>material</code><br><code>copy(source,recursive)</code>、<code>raycast(raycaster,intersects)</code>、<code>updateMorphTargets()</code></p></td></tr><tr align="center"><td><p><code>Line</code>、<code>LineLoop</code>、<code>LineSegments</code></p></td><td><p><code>isLine</code>、<code>type</code>、<code>geometry</code>、<code>material</code><br><code>copy(source,recursive)</code>、<code>computeLineDistances()</code>、<code>raycast(raycaster,intersects)</code>、<code>updateMorphTargets()</code></p></td></tr></table><table><tr align="center"><td>子类</td><td>子类中的属性、方法</td><td>父类</td><td>父类中的共有属性方法</td></tr><tr align="center"><td><p><code>MeshBasicMaterial</code></p></td><td><p><code>isMeshBasicMaterial</code>、<code>type</code>、<code>color</code>、<code>map</code>、<code>wireframe</code>、<code>envMap</code>、<code>envMapRotation</code>、<code>fog</code>等<br><code>copy(source)</code></p></td><td rowspan="7"><p><code>Material</code></p></td><td rowspan="7"><p><code>isMaterial</code>、<code>uuid</code>、<code>name</code>、<code>type</code>、<code>blending</code>、<code>side</code>、<code>vertexColors</code>、<code>opacity</code>、<code>transparent</code>、<code>alphaHash</code>、<code>visible</code>等<br><code>toJSON(meta)</code>、<code>clone()</code>、<code>copy(source)</code>、<code>dispose()</code></p></td></tr><tr align="center"><td><p><code>MeshLambertMaterial</code></p></td><td><p><code>isMeshLambertMaterial</code>、<code>type</code>、<code>color</code>、<code>map</code>、<code>wireframe</code>、<code>envMap</code>、<code>envMapRotation</code>、<code>fog</code>等<br><code>copy(source)</code></p></td></tr><tr align="center"><td><p><code>MeshPhongMaterial</code></p></td><td><p><code>isMeshPhongMaterial</code>、<code>type</code>、<code>shininess</code>、<code>specular</code>、<code>map</code>、<code>wireframe</code>、<code>envMap</code>、<code>envMapRotation</code>、<code>fog</code>等<br><code>copy(source)</code></p></td></tr><tr align="center"><td><p><code>MeshStandardMaterial</code></p></td><td><p><code>isMeshStandardMaterial</code>、<code>defines</code>、<code>type</code>、<code>color</code>、<code>roughness</code>、<code>metalness</code>、<code>map</code>、<code>wireframe</code>、<code>envMap</code>、<code>envMapRotation</code>、<code>envMapIntensity</code>、<code>fog</code>等<br><code>copy(source)</code></p></td></tr><tr align="center"><td><p><code>PointsMaterial</code></p></td><td><p><code>isPointsMaterial</code>、<code>type</code>、<code>color</code>、<code>size</code>、<code>sizeAttenuation</code>、<code>alphaMap</code>、<code>fog</code>等<br><code>copy(source)</code></p></td></tr><tr align="center"><td><p><code>LineBasicMaterial</code></p></td><td><p><code>isLineBasicMaterial</code>、<code>type</code>、<code>color</code>、<code>map</code>、<code>linewidth</code>、<code>linecap</code>、<code>linejoin</code>、<code>fog</code>等<br><code>copy(source)</code></p></td></tr></table><table><tr align="center"><td><p><code>MeshPhysicalMaterial</code></p></td><td><p><code>isMeshPhysicalMaterial</code>、<code>defines</code>、<code>type</code>等<br><code>copy(source)</code>、一些<code>get</code>和<code>set</code></p></td><td><p><code>MeshStandardMaterial</code></p></td><td>见↑</td></tr><tr><td><p><code>LineDashedMaterial</code></p></td><td><p><code>isLineDashedMaterial</code>、<code>type</code>、<code>scale</code>、<code>dashSize</code><br><code>copy(source)</code></p></td><td><p><code>LineBasicMaterial</code></p></td><td>见↑</td></tr></table><p>✅ 这些属性可以在构造<strong>材质</strong>是传入，也可以后面再改；</p><ul><li>这里只有常用的，遇到有问题的多查官网</li></ul><h2 id="_2-材质的wireframe效果" tabindex="-1">2. 材质的<code>wireframe</code>效果 <a class="header-anchor" href="#_2-材质的wireframe效果" aria-label="Permalink to &quot;2. 材质的`wireframe`效果&quot;">​</a></h2><table><tr align="center"><td style="width:300px;"><p><code>wireframe</code></p></td><td style="width:300px;"><p><code>widthSegments</code><br>这里只试了宽</p></td><td style="width:300px;">效果</td></tr><tr align="center"><td rowspan="2"><p><code>true</code></p></td><td>1 ( 默认 )</td><td><img src="'+c+'"></td></tr><tr align="center"><td>5</td><td><img src="'+a+'"></td></tr><tr align="center"><td><p><code>false</code></p></td><td>几都不显示</td><td><img src="'+r+'"></td></tr></table><h2 id="_3-旋转、平移、缩放相关" tabindex="-1">3. 旋转、平移、缩放相关 <a class="header-anchor" href="#_3-旋转、平移、缩放相关" aria-label="Permalink to &quot;3. 旋转、平移、缩放相关&quot;">​</a></h2><p>☑️ <code>Mesh</code>、<code>Line</code>、<code>LineLoop</code>、<code>LineSegment</code>、<code>Points</code>来自共同的父类——<code>Object3D</code>，它来自<code>EventDispatcher</code>； ☑️ <code>Light</code>也继承<code>Object3D</code>； ✅ 要查看、修改位置、旋转、缩放等，以这里为准</p><p>1️⃣ 位置、平移相关</p><table><thead><tr><th style="text-align:center;">操作</th><th style="text-align:center;">属性、方法</th></tr></thead><tbody><tr><td style="text-align:center;">查看</td><td style="text-align:center;"><code>.position</code>、<code>.position.x</code>、<code>.position.y</code>、<code>.position.z</code></td></tr><tr><td style="text-align:center;">修改</td><td style="text-align:center;">设置位置：<code>.position.set(1,1,1)</code>、<code>.position.x = 1</code>等、<br>平移<code>.translateZ(100)</code>等</td></tr></tbody></table><p>2️⃣ 角度、旋转相关</p><table><thead><tr><th style="text-align:center;">操作</th><th style="text-align:center;">属性、方法</th></tr></thead><tbody><tr><td style="text-align:center;">查看</td><td style="text-align:center;"><code>.rotation</code>、<code>.rotation.x</code>、<code>.rotation.y</code>、<code>.rotation.z</code></td></tr><tr><td style="text-align:center;">修改</td><td style="text-align:center;"><code>.rotation.set(1,1,1)</code>、<code>.rotation.x = 1</code>等、<br><code>.rotateZ(1)</code>等</td></tr></tbody></table><p>3️⃣ 比例、缩放相关</p><table><thead><tr><th style="text-align:center;">操作</th><th style="text-align:center;">属性、方法</th></tr></thead><tbody><tr><td style="text-align:center;">查看</td><td style="text-align:center;"><code>.scale</code>、<code>.scale.x</code>、<code>.scale.y</code>、<code>.scale.z</code></td></tr><tr><td style="text-align:center;">修改</td><td style="text-align:center;"><code>.scale.set(1,1,1)</code>、<code>.scale.x = 1</code>等、<br></td></tr></tbody></table>',16),s=[n];function l(p,g,h,y,m,b){return o(),d("div",null,s)}const M=e(i,[["render",l]]);export{x as __pageData,M as default};
